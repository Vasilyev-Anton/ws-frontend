(()=>{"use strict";class e{constructor(e){this.nickname=e}init(){this.messageForm=document.getElementById("message-form"),this.messageInput=document.getElementById("message-input"),this.messagesContainer=document.getElementById("messages-container"),this.usersList=document.getElementById("users-list"),this.messageForm&&this.messageInput&&this.messagesContainer&&this.usersList?(this.messageForm.addEventListener("submit",this.handleSubmit.bind(this)),this.messageInput.addEventListener("keydown",this.handleEnterPress.bind(this))):console.error("ChatUI cannot initialize because some elements are missing.")}handleSubmit(e){e.preventDefault(),this.sendMessage()}handleEnterPress(e){"Enter"===e.key&&(e.preventDefault(),this.sendMessage())}sendMessage(){const e=this.messageInput.value.trim();""!==e&&(this.emit("send-message",{type:"send",user:this.nickname,content:e}),this.messageInput.value="")}updateUsersList(e){this.usersList.innerHTML="",e.forEach((e=>{const t=document.createElement("li");t.textContent=e,e===this.nickname&&(t.textContent="You",t.classList.add("current-user")),t.classList.add("user-item"),this.usersList.appendChild(t)}))}updateMessages(e){e.forEach((e=>{const t=document.createElement("div"),s=document.createElement("span");s.textContent=e.user===this.nickname?"You":e.user,s.classList.add("message-user");const n=document.createElement("span");n.textContent=", ";const i=document.createElement("span");i.textContent=e.time,i.classList.add("message-time");const a=document.createElement("br"),o=document.createTextNode(e.content);t.appendChild(s),t.appendChild(n),t.appendChild(i),t.appendChild(a),t.appendChild(o),t.classList.add(e.user===this.nickname?"message-own":"message-other"),this.messagesContainer.appendChild(t),this.scrollToBottom()}))}scrollToBottom(){setTimeout((()=>{this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}),0)}disconnect(){this.emit("send-message",{type:"exit",user:this.nickname})}on(e,t){this.callbacks=this.callbacks||{},this.callbacks[e]=this.callbacks[e]||[],this.callbacks[e].push(t)}emit(e,t){const s=this.callbacks&&this.callbacks[e];s&&s.forEach((e=>e(t)))}}class t{constructor(e,t,s,n){this.socket=new WebSocket(e),this.socket.addEventListener("open",s),this.socket.addEventListener("message",(e=>{const s=JSON.parse(e.data);"history"===s.type?s.content.forEach((e=>{t(e,!0)})):t(s)})),this.socket.addEventListener("close",n)}send(e){this.socket.send(JSON.stringify(e))}close(){this.socket.close()}}const s=new class{constructor(e){this.url=e}async registerUser(e){const t=await fetch(`${this.url}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({nickname:e})});if(!t.ok){const e=await t.json();throw new Error(e.status)}return t.json()}async sendMessage(e){if(!(await fetch(`${this.url}/send`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e})})).ok)throw new Error("Failed to send message")}}("https://my-first-project-idcp.onrender.com"),n=new class{constructor(){this.registrationForm=this.createRegistrationForm()}createRegistrationForm(){const e=document.createElement("form"),t=document.createElement("label");t.textContent="Выберите псевдоним",e.appendChild(t);const s=document.createElement("input");s.type="text",s.id="nickname",t.setAttribute("for","nickname"),e.appendChild(s);const n=document.createElement("button");return n.type="submit",n.textContent="Продолжить",e.appendChild(n),e}createMessageForm(){const e=document.createElement("form");e.id="message-form";const t=document.createElement("input");return t.id="message-input",t.type="text",e.appendChild(t),e}createMessagesContainer(){const e=document.createElement("div");return e.id="messages-container",e}createUsersList(){const e=document.createElement("ul");return e.id="users-list",e}appendToDOM(){document.body.appendChild(this.registrationForm)}appendMessageFormAndUsersListToDOM(){this.usersList=this.createUsersList();const e=document.createElement("div");e.id="chat-container",this.messagesContainer=this.createMessagesContainer(),e.appendChild(this.messagesContainer),this.messageForm=this.createMessageForm(),e.appendChild(this.messageForm),document.body.appendChild(this.usersList),document.body.appendChild(e)}removeRegistrationForm(){document.body.contains(this.registrationForm)&&document.body.removeChild(this.registrationForm)}removeMessageForm(){document.body.contains(this.messageForm)&&document.body.removeChild(this.messageForm)}};let i;n.appendToDOM(),document.addEventListener("DOMContentLoaded",(()=>{const{registrationForm:a}=n;a.addEventListener("submit",(async o=>{o.preventDefault();const r=a.querySelector('input[type="text"]').value.trim();if(r)try{const a=await s.registerUser(r);if("Псевдоним уже используется."===a.status)alert("Такой псевдоним уже занят, попробуйте другой.");else if("OK"===a.status){n.removeRegistrationForm(),i=new e(r),n.appendMessageFormAndUsersListToDOM(),i.init();const s=new t("wss://my-first-project-idcp.onrender.com/ws",(e=>{"message"===e.type&&(console.log(e),i.updateMessages([e])),"users"===e.type&&i.updateUsersList(e.users)}),(()=>{console.log("WebSocket соединение открыто"),s.send({type:"register",user:r})}),(()=>{console.log("WebSocket соединение закрыто")}));i.on("send-message",(e=>{s.send({type:"send",user:i.nickname,content:e.content})})),window.addEventListener("beforeunload",(()=>i.disconnect())),i.emit("load")}else alert(`Ошибка регистрации: ${a.message}`)}catch(e){alert(`Ошибка регистрации: ${e.message}`)}else alert("Пожалуйста, введите псевдоним.")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,